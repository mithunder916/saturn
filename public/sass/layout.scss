$dev: solid 1px red;
$panel: black;
$bright-pink: #CC3BA7;
$instrument-width: 75%;
$drumMatrix-width: 60%;
$drumControls-width: 15%;

@font-face {
  font-family: "lazer 84";
  src: url("fonts/Lazer84.ttf") format('truetype');
}

@font-face {
  font-family: "colors_of_autumn";
  src: url("fonts/colors_of_autumn.ttf") format('truetype');
}

@font-face {
  font-family: "Streamster";
  src: url("fonts/Streamster.ttf") format('truetype');
}

* {
  font-family: "lazer 84";
  box-sizing: border-box;
  color: $bright-pink;
}

body {
  // lighter purple: 7C4A96
  margin: 0;
  min-height: 100vh;
  background: linear-gradient(to right bottom, #2E005C, #4C2D5C, #483063, #221E47, black);
}

#navbar {
  background-color: $panel;
  height: 5vh;
  display: flex;
  justify-content: space-between;

  #logoContainer {
    position: relative;
    padding-left: 0.5em;
  }

  button {
    display: inline-block;
    margin: 0.75em 0.75em 0 0;
  }

  p {
    margin: 0;
    display: inline;
    font-size: 150%;
    position: absolute;
    left: 2.5em;
    top: 0.2em;
  }

  object{
    width: 5vh;
  }
}

.selector {
  display: block;
  border: 0;

  select {
    display: inline-block;
    border-radius: 1em;
    border-width: .03em;
    background-color: $panel;
    font-family: "Arial";
    font-size: .85em;
    -webkit-appearance: menulist;
  }
}
button {
  background-color: black;
  font-family: "Arial";
}

// Drums
.drumContainer {
  color: black;
  margin: 1em auto 0 auto;
  display: block;
  width: $instrument-width;
  background-color: $bright-pink;
  border-radius: 1em;

  span {
    color: black;
  }
}

.drumRow {
  // padding: 0.25em 0;
}
#iconContainer {
  display: inline-block;
  width: 25%;
  height: 100%;
  // border: solid blue;
  vertical-align: top;
  // background-color: blue;
}
// flexbox parent for icons
#drumIcons {
  display: flex;
  flex-direction: column;
  // current height of drumMatrix canvas
  height: 260px;
}

iconRow {
  height: 100%;
  position: relative;

  object {
    position: absolute;
    margin: auto 0.5em;
    top: 0;
    bottom: 0;
  }

  removeButton {
    position: absolute;
    margin: auto;
    top: 0;
    bottom: 0;
    left: 80%;
    height: 25%;
    width: 10%;
    text-align: center;
    font-size: 70%;

    color: black;
    transition-property: color;
    transition-duration: .3s;
    transition-timing-function: linear;
  }

  removeButton:hover {
    color: red
  }
}

#drumMatrixContainer {
  display: inline-block;
  width: $drumMatrix-width;
}

#drumMatrix {
  display: inline-block;
}

#drumControls {
  display: inline-block;
  width: $drumControls-width;
  vertical-align: top;
  text-align: center;

  p {
    color: black;
  }
}

#addRow {
  display: inline-block;

  input[type=submit] {
    background: black;
    margin-right: 0.5em;
    font-family: "lazer 84";
  }

  select {
    display: inline-block;
    border-radius: 1em;
    border-width: .03em;
    background-color: $panel;
    font-family: "Arial";
    font-size: .85em;
    -webkit-appearance: menulist;
  }
}

#loopControls {
  display: inline-block;
  width: 25%;
  // border: solid $panel;
  margin-bottom: 0.5em;
  padding-left: 1em;
  // text-align: center;
}

#accents {
  // display: inline-block;
  width: $drumMatrix-width;
}
// end Drums

// Synth
.synthHolder {
  margin: 1em auto;
  width: $instrument-width;
}
// holds keyboard AND knobs/sliders
.synthContainer {
  display: inline-block;
  width: 60%;
  // currently determines how far right the keyboard sits
  // margin-left: 8em;
  // margin: 0 auto;
  vertical-align: top;
  background-color: black;
  border-radius: 1em;
}
#synth {
  margin: 0 auto;
  width: 90%;
  height: 175px;
  display: flex;
}
// a panel holding all knobs/sliders
.optionsPanel {
  display: flex;
  height: 175px; // adjustable
  justify-content: space-around;
  background: $panel;
  text-align: center;

  .waveContainer {
    span {
      margin-right: .65em;
      display: inline-block;
      width: 30%;
    }

    select {
      display: inline-block;
      width: 60%;
      border-radius: 1em;
    }

    .multislider {
      margin: .9em .25em
    }


  }
  // sections are sub panels holding specific knobs/sliders
  .section {
    padding: 1.5em .75em;
    display: inline-block;
    border: solid $dev;
    //
    p {
        margin: .5em 0;
      }

    // contains Filter and Res text and knobs
    box {
      display: inline-block;
      width: 50%;
      vertical-align: top;
      text-align: center;
      canvas {
        margin: 0 .25em;
      }
    }
    // how to make more DRY??
    quarter {
      display: inline-block;
      width: 25%;
      vertical-align: top;
      text-align: center;
      canvas {
        margin: 0 .25em;
      }
    }
  }
}
// end Synth

// Presets
.presetContainer {
  background: black;
  display: inline-block;
  border-radius: 1em;
  margin: 0 1em;

  p {
    margin: 0.25em 0;
    text-align: center;
  }

  .section {
    padding: 0.25em 0.5em;
    // display: inline-block;
    // width: 50%;
  }
}

#savePreset {
  input {
    font-family: 'open sans';
    background: black;
  }
  input[type=submit] {
    margin-right: 0.5em;
    font-family: 'lazer 84';
  }
}

.controlButtons {
  margin: 0 auto;
  display: block;
}

.dial {
  display: inline-block;
   // this nested selector functionality doesn't seem to work the same as putting the width attribute sdirectly on the canvas in JSX
  // because the code below changes the canvas DOMnode that contains the dial, while doing it in JSX changes the actual dial as well as the canvas
  // but JSX/nexusUI only understands px;
  canvas {
    // width: 4em;
  }
}
// margin left/right auto + display:block centers synth
