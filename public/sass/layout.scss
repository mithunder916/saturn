* {
  font-family: "open sans";
  box-sizing: border-box;
  color: #CC3BA7;
}

body {
  background-color: #2E005C;
}

.drumContainer {
  margin: 0 auto;
  display: block;
  width: 75%;
}
#drumMatrix {
  width: 100%;
  height: 40%;
}

// holds keyboard AND knobs/sliders
.synthContainer {
  border-style: solid;
  border-width: small;
  border-color: #000000;
  background-color: #000000;
  width: 80%;
  // height: 50%;
  display: block;
  margin: 0 auto;
}

// just knobs and sliders
.synthPanel {
  width: 100%;
}

// just using inline didn't work
// padding for selectors and multislider must be the same
.waveSelectors {
  // display: inline-block;
  // margin: 1%;
  padding: 2% 6%;
  width: 100%;
  select{
    // width: 80%;
  }
}

.oscillatorContainer {
  display: inline-block;
  border-style: solid;
  border-width: small;
  border-color: #ffffff;
  .selector {
    width: 100%;
    select {
      padding: 0;
    }
  }
  .multislider {
    display: inline-block;
    // width: 80%;
    padding: 2% 6%;
    canvas {
      width: 71%;
      margin: 0 auto;
    }
    // margin: 1%;
    // padding: 0 20%;
    // margin: 0 auto;
    // display: block;
    // width: 80%;
  }
}

.filterContainer {
  border-style: solid;
  border-width: small;
  border-color: #ffffff;
  display: inline-block;
  vertical-align: top;
  // width: 80%;
  .dial {
    // padding-top: 20%;
  }
}

.filterText {
  text-align: center;

}

.envelopeContainer {
  border-style: solid;
  border-width: small;
  border-color: #ffffff;
  display: inline-block;
}


.volumeContainer {
  border-style: solid;
  border-width: small;
  border-color: #ffffff;
  display: inline-block;
}

.dial {
  display: inline-block;
   // this nested selector functionality doesn't seem to work the same as putting the width attribute sdirectly on the canvas in JSX
  // because the code below changes the canvas DOMnode that contains the dial, while doing it in JSX changes the actual dial as well as the canvas
  // but JSX/nexusUI only understands px;
  canvas {
    // width: 30%;

  }
}

// #synthVolume {
//   display: inline;
// }

// margin left/right auto + display:block centers synth
#synth {
  margin: 0 auto;
  width: 80%;
  display: block;
  /*height: 20%;*/
}

